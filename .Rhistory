library(needs)
needs(tidyverse,
ggplot2,
readxl,
sf,
geojsonio,
glue,
# rmapshaper,
jsonlite
)
geo <- geojson_read("https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json",
what = "sp") %>%
st_as_sf()
greenland <- geo %>% filter(id == "GRL" | id == "DNK")%>%
summarize(id = "DNK", name = "Denmark", geometry = st_union(geometry))
geo_fixed <- geo %>%
filter(id != "GRL"  & id != "DNK" & id != "ATA")%>%
bind_rows(greenland)
name_id <- geo_fixed %>%
st_set_geometry(NULL)
View(name_id)
data <- read_csv("https://raw.githubusercontent.com/ilyankou/passport-index-dataset/master/legacy/2019-12-17/passport-index-tidy-iso3.csv")%>%
spread(key = Passport, value = Code)%>%
mutate(across("AFG":"ZWE", ~replace_na(., 9)))
full <- left_join(geo_fixed, data, by = c("id"="Destination"))
View(full)
full <- left_join(geo, data, by = c("id"="Destination"))
full <- left_join(geo, data, by = c("id"="Destination"))%>%
filter(!is.na(AFG))
geojson_write(full, geometry = "geometry",  file = "passportindex.geojson")
name_id <- full %>%
st_set_geometry(NULL) %>%
select(id, name)
View(name_id)
name_id <- full %>%
st_set_geometry(NULL) %>%
select(id, name)%>%
mutate(name = case_when(id == "PSE" ~ "Palestine West Bank",
id == "TZA" ~ "Tanzania",
TRUE ~ name
))%>%
sort(name)
name_id <- full %>%
st_set_geometry(NULL) %>%
select(id, name)%>%
mutate(name = case_when(id == "PSE" ~ "Palestine West Bank",
id == "TZA" ~ "Tanzania",
TRUE ~ name
))%>%
arrange(name)
exportJSON <- toJSON(name_id)
exportJSON <- as.character(toJSON(name_id))
write(exportJSON, "test")
exportJSON <- str_replace_all(as.character(toJSON(name_id)), '"id":', 'id: ')
exportJSON <- str_replace_all(as.character(toJSON(name_id)), c('"id":'=' id: ',
'"name":'=' name: '))
exportJSON <- str_c("var dropdown_options =", str_replace_all(as.character(toJSON(name_id)), c('"id":'=' id: ',
'"name":'=' name: ')))
write(exportJSON, "test")
write(exportJSON, "test.js")
exportJSON <- str_c("var dropdown_options = ", str_replace_all(as.character(toJSON(name_id)), c('"id":'=' id: ',
'"name":'=' name: ')))
write(exportJSON, "test.js")
write(exportJSON, "countrynames.js")
geo <- geojson_read("https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json",
what = "sp") %>%
st_as_sf()
data <- read_csv("https://raw.githubusercontent.com/ilyankou/passport-index-dataset/master/legacy/2019-12-17/passport-index-tidy-iso3.csv")%>%
spread(key = Passport, value = Code)%>%
mutate(across("AFG":"ZWE", ~replace_na(., 9)))
full <- left_join(geo, data, by = c("id"="Destination"))%>%
filter(!is.na(AFG))
geojson_write(full, geometry = "geometry",  file = "passportindex.geojson")
name_id <- full %>%
st_set_geometry(NULL) %>%
select(id, name)%>%
mutate(name = case_when(id == "PSE" ~ "Palestine West Bank",
id == "TZA" ~ "Tanzania",
TRUE ~ name
))%>%
arrange(name)
exportJSON <- str_c("var dropdown_options = ", str_replace_all(as.character(toJSON(name_id)), c('"id":'=' id: ',
'"name":'=' name: ')))
write(exportJSON, "countrynames.js")
